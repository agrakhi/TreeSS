% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trees_subdata_withTwin.R
\name{trees_subdata_withTwin}
\alias{trees_subdata_withTwin}
\title{TreeSS predictions when using Twinning from each stratum}
\source{
Singh, R. and Stufken, J. (2023+). Model-free tree-based subdata selection, 1--31.
\doi{10.48550/arXiv.2205.13497}
}
\usage{
trees_subdata_withTwin(
  pop,
  pop.val,
  n,
  NumCores = 8,
  t_s = c(),
  t_d = c(),
  thhold = 5,
  t_n = 10,
  t_p = c(),
  ntree = 100,
  ptry = c()
)
}
\arguments{
\item{pop}{a full dataset with the first column being the response and remaining p columns as the predictors}

\item{pop.val}{a test dataset with the first column being the response and remaining p columns as the predictors}

\item{n}{the desired sample size.}

\item{NumCores}{the number of cores the computer has to make use of parallel computing}

\item{t_s}{the size of the observations on which the tree used for partition should be built. By default,
it is equal to sqrt(\code{N})}

\item{t_d}{the maximum depth of the tree for the partition. The \code{t_n} trees from depth 3 to \code{t_d} are
built. By default, it is equal to log(sqrt(\code{N})), where log is base 2.}

\item{thhold}{the minimum number of observations to be taken from each stratum. By default,
it is set to 5.}

\item{t_n}{the number of trees to be built for each depth. By default, it is set to 10.}

\item{t_p}{the number of variables to be tried on each node while creating the partition. By default,
it is set to p.}

\item{ntree}{the number of trees to be built when random froest is built on each sample for the final predictions.
By default, it is set to 100.}

\item{ptry}{the number of variables to be tried at each split when random froest is built on each sample for the
final predictions. By default, it is set at p if p is at most 5, and at p/3 otherwise.}
}
\value{
A list with three objects. First object is indices indicating the selected TreeSS sample. The second object
is the mean squared prediction error on the test dataset, whereas the third
object is the predicted values on the test dataset.
}
\description{
The function first creates a best partition and then find the expected sample size from each node.
Post that, it samples from each stratum using \code{twinning}. Finally, it builds a random forest on this
sample and find final predicted values.
}
\examples{
## 1. A simulted dataset of 10000 observations and 2 variables with response 
## as Michalewicz function plus some error
NumCores = min(1,parallel :: detectCores() - 4)
X1 = rnorm(n=10000, mean=0, sd=1)
X2 = rnorm(n=10000, mean=0, sd=1)
Y1 = sin(pi*X1)*(sin(pi*X1^2))^20 + sin(pi*X2)*(sin(2*pi*X2^2))^20  
Y = Y1+rnorm(n=10000, mean = 0, sd = (max(Y1)-min(Y1))/10^3)
data = cbind(Y, X1, X2)

# creating train-test split using twinning of 80-20
twin_indices = twinning :: twin(data, r=5) 
pop.val = data[twin_indices,]
pop = data[-twin_indices,]
n = 1000

N = dim(pop)[1]
p = dim(pop)[2]-1
trees_subdata = trees_subdata_withTwin(pop, pop.val, n, NumCores = NumCores) 
print(trees_subdata$valTreeSS)



}
\seealso{
\code{\link{trees_subdata_withUni}}
}
